import subprocess

def blastp (sequence,genome2):
    fh = open("sequence_principale.fasta","w")
    SeqIO.write(sequence, fh,"fasta")
    fh.close()
    l_cmdos=["data/Blast+/linux/bin/blastp","data/Blast+/macosx/bin/blastp","data/Blast+/win/bin/blastp.exe"]
    cmdos=l_cmdos[list_os.index(my_os_type)]
    
    cmd_line=[cmdos,"-query","./sequence_principale.fasta","-db","data/genomes/"+genome2+"/"+genome2,"-evalue","0.001","-out","result_blast.xml","-outfmt", "5"]
    #cmd_line=cmdos+" -query"+" ./sequence_principale.fasta"+" -db"+" ./"+genome2+"/"+genome2+" -evalue"+" 0.001"+" -out"+" result_blast.xml"+" -outfmt"+" 5"
    
    subprocess.run(cmd_line)
    os.remove("sequence_principale.fasta")

blastp(sequence,"GCF_001901045.1")

prochain but formater le fichier xml
from Bio.Blast import NCBIXML
blast_record = NCBIXML.read(result_handle)


OUT = open(sys.argv[4], 'w')
OUT.write("Query Name\tQuery Length\tAlignment Title\tAlignment ID\tAlignment Def\teValue")
from Bio.Blast import NCBIXML
file=open("./result_blast.xml", "r")
blast_record=NCBIXML.read(file)
file.close()
for rec in blast_records:
    for alignement in rec.alignments:
        for hsp in alignment.hsps:
            OUT.write('\n'+ str(rec.query_id) + '\t' + str(rec.query_length) + '\t' + str(alignment.title) + '\t' + str(alignment.hit_id) + '\t' + str(alignment.hit_def) + '\t' + str(hsp.expect))
